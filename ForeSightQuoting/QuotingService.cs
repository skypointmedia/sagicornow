//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


//using InsTech.EverGreen.Acord;
using  NewBusinessService;
namespace InsTech.EverGreen.Integration.Services
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://ACORD.org/Standards/Life/2", ConfigurationName = "ProcessTXLifeRequest")]
    public interface ProcessTXLifeRequest
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/ProcessTXLifeRequest/ProcessTXLifeRequest", ReplyAction = "http://ACORD.org/Standards/Life/2/ProcessTXLifeRequest/ProcessTXLifeRequestRespon" +
            "se")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        AcordTXLifeResponseMessageContract ProcessTXLifeRequest(AcordTXLifeRequestMessageContract request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/ProcessTXLifeRequest/ProcessTXLifeRequest", ReplyAction = "http://ACORD.org/Standards/Life/2/ProcessTXLifeRequest/ProcessTXLifeRequestRespon" +
            "se")]
        System.Threading.Tasks.Task<AcordTXLifeResponseMessageContract> ProcessTXLifeRequestAsync(AcordTXLifeRequestMessageContract request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class AcordTXLifeRequestMessageContract
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://ACORD.org/Standards/Life/2", Order = 0)]
        public TXLife TXLife;

        public AcordTXLifeRequestMessageContract()
        {
        }

        public AcordTXLifeRequestMessageContract(TXLife TXLife)
        {
            this.TXLife = TXLife;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class AcordTXLifeResponseMessageContract
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://ACORD.org/Standards/Life/2", Order = 0)]
        public TXLife TXLife;

        public AcordTXLifeResponseMessageContract()
        {
        }

        public AcordTXLifeResponseMessageContract(TXLife TXLife)
        {
            this.TXLife = TXLife;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProcessTXLifeRequestChannel : ProcessTXLifeRequest, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessTXLifeRequestClient : System.ServiceModel.ClientBase<ProcessTXLifeRequest>, ProcessTXLifeRequest
    {

        public ProcessTXLifeRequestClient()
        {
        }

        public ProcessTXLifeRequestClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public ProcessTXLifeRequestClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessTXLifeRequestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessTXLifeRequestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AcordTXLifeResponseMessageContract ProcessTXLifeRequest.ProcessTXLifeRequest(AcordTXLifeRequestMessageContract request)
        {
            return base.Channel.ProcessTXLifeRequest(request);
        }

        public void ProcessTXLifeRequest(ref TXLife TXLife)
        {
            AcordTXLifeRequestMessageContract inValue = new AcordTXLifeRequestMessageContract();
            inValue.TXLife = TXLife;
            AcordTXLifeResponseMessageContract retVal = ((ProcessTXLifeRequest)(this)).ProcessTXLifeRequest(inValue);
            TXLife = retVal.TXLife;
        }

        public System.Threading.Tasks.Task<AcordTXLifeResponseMessageContract> ProcessTXLifeRequestAsync(AcordTXLifeRequestMessageContract request)
        {
            return base.Channel.ProcessTXLifeRequestAsync(request);
        }
    }
}